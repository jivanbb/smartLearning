<style type="text/css">
  #search {
    margin-left: 20px;
    border:none;
    border-bottom: 1px solid #CECECE;
    padding: 5px;
  }
</style>
<script src="<?= BASE_ASSET; ?>/js/jquery.hotkeys.js"></script>
<script type="text/javascript">
//This page is a result of an autogenerated content made by running test.html with firefox.
function domo(){

   // Binding keys
   $('*').bind('keydown', 'Ctrl+a', function assets() {
     window.location.href = BASE_URL + '/administrator/permission/add';
     return false;
   });

   $('*').bind('keydown', 'Ctrl+s', function assets() {
     $('#btn_save').trigger('click');
     return false;
   });

   $('*').bind('keydown', 'Ctrl+x', function assets() {
    if ($('#btn_undo').is(":visible")) {
      $('#btn_undo').trigger('click');
    }
    return false;
  });
 }

 jQuery(document).ready(domo);
</script>
<!-- Content Header (Page header) -->
<?php 
$arr = array();
if (!empty($modules) && is_array($modules)) {
  foreach ($modules as $key => $value) {
    $arr[] = $value->name;
  } }
  $add_array = $arr;

  $view_array = $arr;

  $edit_array = $arr;

  $delete_array = $arr ;
  $list_array = $arr;
  ?>

  <section class="content-header new-july-design"  id="new-feb-design">
   <div class="row">
    <div class="col-md-8 col-sm-8 col-xs-8">
      <ul class="nav nav-pills tabs-account" id="myTab">

        <li class="active"><a href="role" data-original-title="" title=""><?=cclang('permission')?></a></li>
      </ul>
    </div>
    <?php if (check_role_exist_or_not(5, array("view","edit","list"))) {?>
      <div class="col-md-4 col-xs-4 text-right">
       <div class="filter-wrap-top-tab"> 
        <a href="<?= site_url('administrator/role'); ?>"><button type="button" class="btn btn-list" id="btn_list"></button></a>
      </div>
    </div>
  <?php }?>

</section>
<!-- Main content -->
<div class="tab-content new-july-design">
  <div class="tab-pane fade in active">
    <div class="col-lg-12 mt-24p">
      <section class="content">
       <div class="row" id="new-feb-body-design">
         <div class="row mr-ml-0 ">
          <div class="col-md-12 new-feb-header-container">

            <div class="title-container">
            </div>
            <div class="side-icon ">
          </div>
        </div>
      </div>
      <div class="col-md-12"  id="box-container">
       <div class="box box-warning">
        <div class="box-body ">



          <?= form_open('administrator/role/save', [
            'name'    => 'form_role', 
            'class'   => 'form-horizontal', 
            'id'      => 'form_role', 
            'method'  => 'POST'
          ]); ?>

          <div class="row">
           <div class="col-md-4">
            <div class="form-wrap ">
              <label for="country" class="label-part"><?=cclang('role')?>
                <i class="required">*</i>
              </label>
              <div class="input-field-part">
                <select  class="form-control chosen-select-deselect" name="group_id" id="group_name" data-placeholder="<?=cclang('role')?>" >
                  <option value=""></option>
                  <?php foreach (db_get_all_data('aauth_groups') as $row): ?>
                    <option value="<?= $row->id ?>"><?= $row->name; ?></option>
                  <?php endforeach; ?>  
                </select>
                <small class="info help-block">
                </small>
              </div>
            </div>
          </div>

        </div>

        <div class="table-responsive"> 
          <table id="role_management" class="table table-bordered table-striped dataTable">
           <thead>
            <tr class="">
              <th><input type="checkbox" class="check_all"> <?=cclang('s.n.')?></th>
              <th><?=cclang('module')?></th>
              <th><?=cclang('create')?></th>
              <th><?=cclang('list')?></th>
              <th><?=cclang('view')?></th>
              <th><?=cclang('edit')?></th>
              <th><?=cclang('delete')?></th>
              <th><?=cclang('mobile')?></th>
              <th><?=cclang('Self Only')?></th>
            </tr>
          </thead>
          <tbody id="tbody_oms_documents">
           <?php 
           $i = 0;
           if (!empty($modules) && is_array($modules)) {
            foreach ($modules as $module) {

              ?>
              <tr>
                <td><input type="checkbox" class="check_row level1" data-level="1"></td>
                <td><?php echo cclang($module->name); ?></td>
                <td> <?php if($module->add ==1){?>
                  <input type="checkbox" name="permission[<?php echo $module->id; ?>][add]" 
                  <?php echo check_enable_or_not($add_array, $module->name); ?> value = "1" class="check_one"><?php }?> 
                </td>
                <td><?php if($module->list ==1){?><input type="checkbox" name="permission[<?php echo $module->id; ?>][list]" 
                  <?php   echo check_enable_or_not($list_array, $module->name); ?> value = "1" class="check_one"></td><?php }?>
                  <td><?php if($module->view ==1){?> <input type="checkbox" name="permission[<?php echo $module->id; ?>][view]" <?php 
                  echo check_enable_or_not($view_array, $module->name); ?> value='1' class="check_one"> </td><?php }?>

                  <td><?php if($module->edit ==1){?> <input type="checkbox"  name="permission[<?php echo $module->id; ?>][edit]" <?php  echo check_enable_or_not($edit_array, $module->name); ?> value='1' class="check_one"><?php }?> </td>
                  <td><?php if($module->delete ==1){?> <input type="checkbox"  name="permission[<?php echo $module->id; ?>][delete]"  <?php  echo check_enable_or_not($delete_array, $module->name); ?> value='1' class="check_one"><?php }?> </td> 
                      <td><?php if($module->mobile ==1){?>
                      <input type="checkbox" name="permission[<?php echo $module->id; ?>][mobile]"  <?php 
                      echo check_enable_or_not($list_array, $module->name); ?> value='1' class="check_one">
                      <?php }?></td>
                      <td><?php if($module->self_only ==1){?>
                    <input type="checkbox" name="permission[<?php echo $module->id; ?>][self_only]"  <?php 
                    echo check_enable_or_not($list_array, $module->name); ?> value='1' class="check_one">
                    <?php }?></td>
                    </tr>
                    <?php 
                    getSubmodule($module->sub,$modules);?>
                    <?php 
                    $i++;
                  } } ?>
                </tbody>
              </table>
            </div>

            <!-- nav-tabs-custom -->
            <div class="message">

            </div>
            <button class="btn btn-flat btn-primary btn_save btn_action btn-success" id="btn_save" data-stype='stay' title="save (Ctrl+s)"> <?= cclang('save'); ?></button>
            <?= form_close(); ?>
          </div>
          <!-- /.col -->
        </div>
      </div>
      <!--/box body -->
    </div>
    <!--/box -->

  </div>
</div>
</section>
</div>
<div class="clearfix"></div>
</div>
</div>
<!-- /.content -->


<!-- Page script -->
<script>
  $(document).ready(function() {


    $('.btn_save').click(function() {
      $('.message').fadeOut();

      var form_access = $('#form_role');
      var data_post = form_access.serialize();

      $('.loading').show();

      $.ajax({
        url: BASE_URL + 'administrator/role/save',
        type: 'POST',
        dataType: 'json',
        data: data_post,
      })
      .done(function(res) {
        if (res.success) {
          showStatusMessage('success', 'Success', res.message);
          // $('.message').printMessage({
          //   message: res.message
          // });
          // $('.message').fadeIn().delay(1000).fadeOut();
          $('.btn_undo').hide();

        } else {
          showValidationMessage(`${res.message}`);
          // $('.message').printMessage({
          //   message: res.message,
          //   type: 'warning'
          // });
          // $('.message').fadeIn().delay(1000).fadeOut();
        }

      })
      .fail(function() {
        showStatusMessage('error', 'Error', 'Error save data');
        // $('.message').printMessage({
        //   message: 'Error save data',
        //   type: 'warning'
        // });
      })
      .always(function() {
        $('.loading').hide();
        $('html, body').animate({
          scrollTop: $(document).height()
        }, 1000);
      });

      return false;
    }); /*end btn save*/
  });

  function check_all_option(){
    var count = 0;
    var check_length = $('.check_row').length;
    $('.check_row').each(function(index, element) {
      if(!$(this).is(':checked')){
       $('.check_all').prop('checked',false);
       return;
     }else{
       count = count+1;
     }
     if(count == check_length){
       $('.check_all').prop('checked',true);
     }
   });
  }

// function check_child_option(){
//   var count = 0;
//   var check_length = $('.child').length;
//   $('.check_row').each(function(index, element) {
//     if(!$(this).is(':checked')){
//      $('.check_row').prop('checked',false);
//      return;
//    }else{
//      count = count+1;
//    }
//    if(count == check_length){
//      $('.check_row').prop('checked',true);
//    }
//  });
// }

function check_row_option(){
  $('#role_management tbody tr').each(function(){
    var count = 0;
    var check_length = $(this).find('.check_one:enabled').length;
    var parent = $(this);
    parent.find('.check_one:enabled').each(function() {
      if($(this).is(':checked')){
       count = count + 1;
     }else{
      parent.find('.check_row').prop('checked',false);
    }
  });
    if(count == check_length){
      parent.find('.check_row').prop('checked',true);
    }
  });
}

$(document).ready(function(e) {
  check_row_option();
  // check_child_option();
  check_all_option();
  $('.check_all').on('click',function(){
    if($(this).is(':checked')){
     $('#role_management input[type="checkbox"]').not("[disabled]").prop('checked',true);
   }else{
     $('#role_management input[type="checkbox"]').not("[disabled]").prop('checked',false);
   }
 });

  
  $('#role_management').on('click','.check_row',function(){
    if($(this).is(':checked')){
     $(this).closest('tr').find('input[type="checkbox"]').not("[disabled]").prop('checked',true);
   }else{
     $(this).closest('tr').find('input[type="checkbox"]').not("[disabled]").prop('checked',false);
   }
   check_all_option();
 });


  
  $('#role_management').on('click','.check_one',function(){
    var parent = $(this).closest('tr');
    if($(this).is(':checked')){
     var rowcount = 0;
     var check_one_length = parent.find('.check_one:enabled').length;
     parent.find('.check_one:enabled').each(function() {
      if($(this).is(':checked')){
       rowcount = rowcount+1;
     }else{
       parent.find('.check_row').prop('checked',false);
     }
   });
     
     if(rowcount == check_one_length){
      parent.find('.check_row').prop('checked',true);
    }
  }else{
   parent.find('.check_row').prop('checked',false);     
 }
 check_all_option();
});


  // Handle child checkbox change events
  $('#role_management input[type="checkbox"]').on('change', function() {
    // var currentLevel = getClassLevel($(this).attr('class'));
    var currentLevel = $(this).data('level');
    var isChecked = $(this).prop('checked');

    // Check/uncheck child checkboxes
    $(this).closest('tr').nextAll().each(function() {
      // var level = getClassLevel($(this).find('input[type="checkbox"]').attr('class'));
      var level = $(this).find('input[type="checkbox"]').data('level');
      if (level > currentLevel) {
        $(this).find('input[type="checkbox"]').prop('checked', isChecked);
      } else if (level <= currentLevel) {
        return false; // Stop looping if the level is less than or equal
      }
    });

    // Check/uncheck parent checkboxes
    var parentLevel = currentLevel - 1;
    while (parentLevel >= 1) {
     var parent =  $(this).closest('tr').prevAll('tr:has(input[data-level="' + parentLevel + '"])').first().find('input[type="checkbox"]');
      parent.prop('checked', isChecked);
      var parentCheckbox = $(this).closest('table').find('input[data-level="' + parentLevel + '"]:checked');
      if (parentCheckbox.length === 0) {
        parentCheckbox.prop('checked', false);
      } else if (parentCheckbox.length === 1) {
        parentCheckbox.prop('checked', true);
      } else {

        parentCheckbox.prop('checked', true);
        break; // Stop checking higher levels if there are multiple checked checkboxes
      }
      parentLevel--;
    }

});


});

/*end doc ready*/
</script>


<?php 
function getSubmodule($sub_group,$modules,$sn=2,$sub_mark = '-') {
  $arr = array();
  foreach ($modules as $key => $value) {
    $arr[] = $value->name;
  }
  $add_array = $arr;

  $view_array = $arr;

  $edit_array = $arr;
  $list_array = $arr;
  $delete_array = $arr ;
  foreach ($sub_group as $key => $data) {
    $use = '<tr >';
    $use .= '<td><input type="checkbox" class="check_row level'.$sn.'"  data-level="'.$sn.'"></td>';
    $use .=    '<td value="'.$data->id.'">  &nbsp; &nbsp; &nbsp; &nbsp; '.$sub_mark.' '.cclang($data->name).'</td>';

    if($data->add ==1){
      $use .= '<td><input type="checkbox" name="permission['.$data->id.'][add]" value = "1" class="check_one "></td>';   
    }else{
      $use .= '<td></td>'; 
    }
   if($data->list ==1){
   $use .= '<td><input type="checkbox" name="permission['.$data->id.'][list]" value="1" class="check_one "></td>';
   }else{
    $use .= '<td></td>'; 
   }
   if($data->view ==1){
   $use .= '<td><input type="checkbox" name="permission['.$data->id.'][view]"   value="1" class="check_one "></td>';
   }else{
    $use .= '<td></td>'; 
   }
   if($data->edit ==1){
     $use .= '<td><input type="checkbox" name="permission['.$data->id.'][edit]" 
     value="1" class="check_one "></td>';
   }else{
     $use .= '<td></td>';
   } 
   if($data->delete ==1){
     $use .= '<td><input type="checkbox" name="permission['.$data->id.'][delete]"  
     value="1" class="check_one "></td>';
   }else{
     $use .= '<td></td>'; 
   }

if(!empty($data->mobile ==1)){
  $use .= '<td><input type="checkbox" name="permission['.$data->id.'][mobile]"  
  value="1" class="check_one "></td>';  
}else{
 $use .= '<td></td>';
}
if($data->self_only ==1){
  $use .= '<td><input type="checkbox" name="permission['.$data->id.'][self_only]"  
  value="1" class="check_one "></td>';
}else{
  $use .= '<td></td>'; 
}
$use .= '</tr>';
echo $use;
$level =$sn+1;
getSubmodule($data->sub,$modules,$level,$sub_mark.' - ');
}


} 


?>
